#!/usr/bin/env bash
base_path=/home/alexs/

# ↓↓↓ Yeah that's stupid, but all I can do now 
selected=$(find \
           ~/.all-my-shit \
           ~/tmp \
           ~/personal \
           ~/work \
           ~/learning \
           -mindepth 0 -maxdepth 2 \
           -type d \
           -not -path "**/.cache" \
           -not -path "**/.cache/**" \
           -not -path "**/.git" \
           -not -path "**/.git/**" \
           -not -path "**/node_modules" \
           -not -path "**/node_modules/**" \
           | cut -d "/" -f4- \
           | fzf )

 if [[ -z $selected ]]; then
    exit 0
 fi

session_name=$( echo $selected | cut -d "/" -f1  | tr . _ )
window_name=$( echo $selected | rev | cut -d "/" -f 1 | rev  | tr . _ )
 
# If we don't have session with EXACT session name → we create session:window with choosen path
if ! tmux has-session -t "=$session_name" 2> /dev/null; then
   tmux new-session -d -s $session_name -n $window_name -c $base_path$selected
fi

# If we have session with EXACT session name → 1 we switch client into that session
if tmux has-session -t "=$session_name" 2> /dev/null ; then  
   tmux switch-client -t $session_name # Causes the bug when vim opened in target window

   # If target-session has NO window with given name → create new window with given name and choosen path
   if [[ -z $( tmux list-windows -t $session_name | grep $window_name ) ]] ; then
     tmux new-window -n $window_name -c $base_path$selected
   fi
fi

# If we in tmux → switch switch client to our session:window
# Else → attach to session:window
if [ $TMUX ] ; then
 tmux switch-client -t $session_name:$window_name
else
 tmux a -t $session_name:$window_name
fi

# Output the variables
if false ; then 
  echo "Session: $session_name"
  echo "Window: $window_name"
  echo "Selected: $selected"
  echo "Path: $base_path"
fi
